From 9eea314a8100b3b94a0e71342945e19d2d10dfec Mon Sep 17 00:00:00 2001
From: f-o-o-g-s <17360806+f-o-o-g-s@users.noreply.github.com>
Date: Wed, 18 Dec 2024 17:50:49 -0700
Subject: [PATCH] both rings3/carriers table now sync on application startup as
 well as from settings_dialog.py

---
 main_gui.py        | 81 ++++++++++++++++++++++++++++++++++------------
 settings_dialog.py | 47 ++++++++++++++++-----------
 2 files changed, 90 insertions(+), 38 deletions(-)

diff --git a/main_gui.py b/main_gui.py
index 755f28c..18b1cfa 100644
--- a/main_gui.py
+++ b/main_gui.py
@@ -2825,7 +2825,7 @@ def sync_database(self, source_path=None, target_path=None):
                 for row in target_cursor.fetchall():
                     print(f"Date: {row[0]}, Carrier: {row[1]}, Total: {row[2]}")
                 
-                stats = {"rings3_added": 0, "carriers_added": 0}
+                stats = {"rings3_added": 0, "carriers_added": 0, "carriers_modified": 0}
                 
                 # Get only new records that don't exist in the target
                 print("\nChecking for new records...")
@@ -2866,31 +2866,71 @@ def sync_database(self, source_path=None, target_path=None):
                     """, new_records)
                     stats["rings3_added"] = len(new_records)
 
-                # Handle carriers table similarly - only add new records
-                source_carriers = pd.read_sql_query("""
-                    SELECT s.* 
-                    FROM carriers s
-                    WHERE NOT EXISTS (
-                        SELECT 1 FROM carriers t 
-                        WHERE t.effective_date = s.effective_date 
-                        AND t.carrier_name = s.carrier_name
-                    )
-                """, source_conn)
-
-                if not source_carriers.empty:
-                    print(f"Found {len(source_carriers)} new carriers to add")
+                # Handle carriers table similarly - using direct SQL like rings3
+                print("\nChecking for new carrier records...")
+                source_cursor.execute("""
+                    SELECT DISTINCT s.* 
+                    FROM carriers s 
+                    ORDER BY s.effective_date DESC, s.carrier_name
+                """)
+                source_carrier_records = source_cursor.fetchall()
+                
+                # Check each source carrier record against target
+                new_carrier_records = []
+                for record in source_carrier_records:
+                    effective_date, carrier_name = record[0], record[1]
+                    target_cursor.execute("""
+                        SELECT 1 FROM carriers 
+                        WHERE effective_date = ? 
+                        AND carrier_name = ?
+                    """, (effective_date, carrier_name))
                     
-                    # Convert DataFrame to list of tuples for insert
-                    insert_data = [tuple(x) for x in source_carriers.values]
+                    if not target_cursor.fetchone():
+                        new_carrier_records.append(record)
+                        print(f"Found new carrier record: Date: {effective_date}, Carrier: {carrier_name}")
+                
+                if new_carrier_records:
+                    print(f"\nPreparing to add {len(new_carrier_records)} carrier records:")
+                    for record in new_carrier_records[:5]:  # Show first 5 records
+                        print(record)
                     
-                    # Insert only new records
+                    # Insert new carrier records directly
                     target_conn.executemany("""
                         INSERT INTO carriers (
                             effective_date, carrier_name, list_status,
                             ns_day, route_s, station
                         ) VALUES (?, ?, ?, ?, ?, ?)
-                    """, insert_data)
-                    stats["carriers_added"] = len(source_carriers)
+                    """, new_carrier_records)
+                    stats["carriers_added"] = len(new_carrier_records)
+
+                # Check for modified carrier records
+                modified_carriers = pd.read_sql_query("""
+                    SELECT s.* 
+                    FROM carriers s
+                    JOIN carriers t ON 
+                        s.effective_date = t.effective_date AND
+                        s.carrier_name = t.carrier_name
+                    WHERE COALESCE(s.list_status,'') != COALESCE(t.list_status,'')
+                       OR COALESCE(s.ns_day,'') != COALESCE(t.ns_day,'')
+                       OR COALESCE(s.route_s,'') != COALESCE(t.route_s,'')
+                       OR COALESCE(s.station,'') != COALESCE(t.station,'')
+                """, source_conn)
+
+                if not modified_carriers.empty:
+                    print(f"\nUpdating {len(modified_carriers)} modified carrier records")
+                    
+                    # Update modified records
+                    for _, record in modified_carriers.iterrows():
+                        target_conn.execute("""
+                            UPDATE carriers 
+                            SET list_status = ?, ns_day = ?, route_s = ?, station = ?
+                            WHERE effective_date = ? AND carrier_name = ?
+                        """, (
+                            record['list_status'], record['ns_day'], 
+                            record['route_s'], record['station'],
+                            record['effective_date'], record['carrier_name']
+                        ))
+                    stats["carriers_modified"] = len(modified_carriers)
 
                 # If we added any records, update the sync log
                 if stats["rings3_added"] > 0 or stats["carriers_added"] > 0:
@@ -2908,7 +2948,8 @@ def sync_database(self, source_path=None, target_path=None):
                     message = (
                         f"Sync completed successfully.\n"
                         f"Added {stats['rings3_added']} new clock rings\n"
-                        f"Added {stats['carriers_added']} new carrier records"
+                        f"Added {stats['carriers_added']} new carrier records\n"
+                        f"Updated {stats['carriers_modified']} carrier records"
                     )
                     return True, message, stats
                 else:
diff --git a/settings_dialog.py b/settings_dialog.py
index 1d05cea..7eb19ff 100644
--- a/settings_dialog.py
+++ b/settings_dialog.py
@@ -639,31 +639,42 @@ def sync_database(self):
                     """, new_records)
                     stats["rings3_added"] = len(new_records)
 
-                # Handle carriers table similarly - only add new records
-                source_carriers = pd.read_sql_query("""
-                    SELECT s.* 
-                    FROM carriers s
-                    WHERE NOT EXISTS (
-                        SELECT 1 FROM carriers t 
-                        WHERE t.effective_date = s.effective_date 
-                        AND t.carrier_name = s.carrier_name
-                    )
-                """, source_conn)
-
-                if not source_carriers.empty:
-                    print(f"Found {len(source_carriers)} new carriers to add")
+                # Handle carriers table similarly - using direct SQL like rings3
+                print("\nChecking for new carrier records...")
+                source_cursor.execute("""
+                    SELECT DISTINCT s.* 
+                    FROM carriers s 
+                    ORDER BY s.effective_date DESC, s.carrier_name
+                """)
+                source_carrier_records = source_cursor.fetchall()
+                
+                # Check each source carrier record against target
+                new_carrier_records = []
+                for record in source_carrier_records:
+                    effective_date, carrier_name = record[0], record[1]
+                    target_cursor.execute("""
+                        SELECT 1 FROM carriers 
+                        WHERE effective_date = ? 
+                        AND carrier_name = ?
+                    """, (effective_date, carrier_name))
                     
-                    # Convert DataFrame to list of tuples for insert
-                    insert_data = [tuple(x) for x in source_carriers.values]
+                    if not target_cursor.fetchone():
+                        new_carrier_records.append(record)
+                        print(f"Found new carrier record: Date: {effective_date}, Carrier: {carrier_name}")
+                
+                if new_carrier_records:
+                    print(f"\nPreparing to add {len(new_carrier_records)} carrier records:")
+                    for record in new_carrier_records[:5]:  # Show first 5 records
+                        print(record)
                     
-                    # Insert only new records
+                    # Insert new carrier records directly
                     target_conn.executemany("""
                         INSERT INTO carriers (
                             effective_date, carrier_name, list_status,
                             ns_day, route_s, station
                         ) VALUES (?, ?, ?, ?, ?, ?)
-                    """, insert_data)
-                    stats["carriers_added"] = len(source_carriers)
+                    """, new_carrier_records)
+                    stats["carriers_added"] = len(new_carrier_records)
 
                 # If we added any records, update the sync log
                 if stats["rings3_added"] > 0 or stats["carriers_added"] > 0:
-- 
2.47.1.windows.1

